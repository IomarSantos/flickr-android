const { danger, warn } = require("danger");
const fs = require("fs");
const { Map } = require("immutable");

const rootProjectDir = process.cwd();
const allTouchedPrFiles = Map(
  danger.git.created_files
    .concat(danger.git.modified_files)
    .map(relativePath => [rootProjectDir + "/" + relativePath, relativePath])
);

// This dir is generated by the `gradle detekt`.
const detektReportsDir = "detekt-reports";
if (fs.existsSync(detektReportsDir)) {
  const allDetektReportFileNames = fs.readdirSync(detektReportsDir);
  allDetektReportFileNames
    .filter(reportFileName => reportFileName.endsWith(".json"))
    .map(reportFileName => detektReportsDir + "/" + reportFileName)
    .map(reportFilePath => JSON.parse(fs.readFileSync(reportFilePath, "utf8")))
    // Only accept files which are modified or newly created in the PR.
    .map(comments =>
      comments.filter(comment => allTouchedPrFiles.has(comment.file))
    )
    .forEach(comments => {
      comments.forEach(comment => {
        const fileToPostComment = allTouchedPrFiles.get(comment.file);
        warn(comment.message, fileToPostComment, comment.line);
      });
    });
} else {
  warn("The `detekt-reports` directory does not exist (ಥ﹏ಥ)");
}
